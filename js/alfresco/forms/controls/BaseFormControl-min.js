define(["dojo/_base/declare","dijit/_WidgetBase","dijit/_TemplatedMixin","dijit/_FocusMixin","dojo/text!./templates/BaseFormControl.html","dojo/dom-construct","alfresco/core/Core","alfresco/core/ObjectTypeUtils","dojo/_base/xhr","dojo/_base/lang","dojo/_base/array","dojo/dom-style","dojo/dom-class","dijit/focus","dijit/Tooltip"],function(g,u,s,y,j,Q,w,q,X,h,k,V,x,v,G){return g([u,s,y,w],{cssRequirements:[{cssFile:"./css/BaseFormControl.css"}],i18nRequirements:[{i18nFile:"./i18n/BaseFormControl.properties"}],templateString:j,wrappedWidget:null,pubSubScope:"",type:"",fieldId:"",label:"",unitsLabel:"",description:"",name:"",value:"",options:null,postWhenHiddenOrDisabled:true,noValueUpdateWhenHiddenOrDisabled:false,_visible:true,alfVisible:function L(aa){this.alfLog("log","Change visibility status for '"+this.fieldId+"' to: "+aa);this._visible=aa;if(this.containerNode){var ab=aa?"block":"none";V.set(this.containerNode,{display:ab})}},_required:false,alfRequired:function r(aa){this.alfLog("log","Change requirement status for '"+this.fieldId+"' to: "+aa,{});this._required=aa;if(this._requirementIndicator){if(this._required==true){x.add(this._requirementIndicator,"required")}else{x.remove(this._requirementIndicator,"required")}this.validate()}},_disabled:false,alfDisabled:function C(aa){this.alfLog("log","Change disablement status for '"+this.fieldId+"' to: "+aa);this._disabled=aa;if(this.wrappedWidget&&typeof this.wrappedWidget.set==="function"){this.wrappedWidget.set("disabled",aa)}},visibilityConfig:null,requirementConfig:null,disablementConfig:null,constructor:function n(aa){g.safeMixin(this,aa);if(this.fieldId==null||this.fieldId==""){this.fieldId=this.generateUuid()}this.processConfig("alfVisible",this.visibilityConfig);this.processConfig("alfRequired",this.requirementConfig);this.processConfig("alfDisabled",this.disablementConfig);this.processOptionsConfig(this.optionsConfig);if(this.validationConfig!=null&&typeof this.validationConfig.regex=="string"){this.validationConfig.regExObj=new RegExp(this.validationConfig.regex)}},processOptionsConfig:function E(ab){if(ab!=null){var aa=h.getObject("changesTo",false,ab);if(aa!=null){if(q.isArray(aa)){k.forEach(ab.changesTo,h.hitch(this,"createOptionsChangesTo",ab))}else{this.alfLog("warn","The supplied 'changesTo' attribute for '"+this.fieldId+"' was not an Array")}}var ad=h.getObject("updateTopics",false,ab);if(ad!=null){if(q.isArray(ad)){k.forEach(ab.updateTopics,h.hitch(this,"createOptionsSubscriptions",ab))}else{this.alfLog("warn","The supplied 'updateTopics' attribute for '"+this.fieldId+"' was not an Array")}}var af=h.getObject("requestTopic",false,ab),ae=h.getObject("callback",false,ab),ac=h.getObject("fixed",false,ab);if(af!=null){this.getPubSubOptions(af)}else{if(ae!=null){if(typeof ae==="function"){this.options=ae(ab);k.forEach(this.options,h.hitch(this,"processOptionLabel"))}else{if(q.isString(ae)&&typeof this[ae]==="function"){this.options=this[ae](ab);k.forEach(this.options,h.hitch(this,"processOptionLabel"))}else{this.alfLog("warn","The supplied 'callback' attribute for '"+this.fieldId+"' was not a Function")}}}else{if(ac!=null){if(q.isArray(ac)){this.options=ac;k.forEach(this.options,h.hitch(this,"processOptionLabel"))}else{this.alfLog("log","The supplied fixed options attribute for '"+this.fieldId+"' was not an Array")}}}}}},processOptionLabel:function m(ab,aa){if(ab.label){ab.label=this.message(ab.label)}else{if(ab.value){ab.label=ab.value}else{this.alfLog("warn","An option was provided with neither label nor value",ab,this)}}},createOptionsChangesTo:function H(ae,ad,ab){if(ad.targetId==null){this.alfLog("warn","No 'targetId' defined in subscription config",ad,ae,this)}else{var aa="_valueChangeOf_"+ad.targetId,ac=(ad.global!=null?ad.global:false);this.alfSubscribe(aa,h.hitch(this,"updateOptions",ae),ac)}},createOptionsSubscriptions:function T(ad,ac,aa){if(ac.topic==null){this.alfLog("warn","No 'topic' defined in subscription config",ac,ad,this)}else{var ab=(ac.global!=null?ac.global:false);this.alfSubscribe(ac.topic,h.hitch(this,"updateOptions",ad),ab)}},getOptionsFromPublication:function z(ac,ab){var aa=h.getObject("options",false,ab);if(aa!=null&&q.isArray(aa)){return aa}else{return[]}},updateOptions:function B(ab,aa){this.alfLog("log","OPTIONS CONFIG: Field '"+this.fieldId+"' is handling value change of field'"+aa.name);if(ab.requestTopic!=null){this.getPubSubOptions(ab.requestTopic)}else{if(ab.callback!=null){if(typeof ab.callback=="function"){this.setOptions(ab.callback(ab,aa,this))}else{if(typeof ab.callback=="string"&&typeof this[ab.callback]=="function"){this.setOptions(this[ab.callback](ab,aa,this))}else{this.alfLog("log","The supplied 'callback' attribute for '"+this.fieldId+"' was neither a String nor a function")}}}}},_pubSubOptionsHandle:null,getPubSubOptions:function Z(ab){var aa=this.generateUuid();this._pubSubOptionsHandle=this.alfSubscribe(aa,h.hitch(this,"onPubSubOptions"),true);this.alfPublish(ab,{responseTopic:aa},true)},onPubSubOptions:function f(aa){if(this._pubSubOptionsHandle!=null){this.alfUnsubscribe(this._pubSubOptionsHandle)}else{this.alfLog("warn","A subscription handle was not found for processing pubSubOptions - this could be a potential memory leak",this)}if(aa.options!=null){this.setOptions(aa.options)}else{this.alfLog("warn","No 'options' attribute published in payload for pubSub options",aa,this)}},setOptions:function D(ab){this.alfLog("log","Setting options for field '"+this.fieldId+"'",ab);var ac=this.getValue();this.options=ab;if(this.wrappedWidget){var aa=this.wrappedWidget.get("options");if(aa&&typeof this.wrappedWidget.removeOption==="function"){k.forEach(aa,h.hitch(this,"removeOption"))}if(typeof this.wrappedWidget.addOption==="function"){k.forEach(ab,h.hitch(this,"addOption"))}}this.setValue(ac)},removeOption:function R(ab,aa){this.wrappedWidget.removeOption(ab)},addOption:function W(ab,aa){this.processOptionLabel(ab,aa);this.wrappedWidget.addOption(ab)},processConfig:function i(ab,aa){if(aa){if(typeof aa.initialValue!="undefined"){this[ab](aa.initialValue)}if(typeof aa.rules!="undefined"){this.processRulesConfig(ab,aa.rules)}else{if(typeof aa.rules!="undefined"){this.alfLog("log","The rules configuration for attribute '"+ab+"' for property '"+this.fieldId+"' was not an Object")}}if(typeof aa.callbacks=="object"){this._processCallbacksConfig(ab,aa.callbacks)}else{if(typeof aa.callbacks!="undefined"){this.alfLog("log","The callback configuration for attribute '"+ab+"' for property '"+this.fieldId+"' was not an Object")}}}},_rulesEngineData:null,processRulesConfig:function A(aa,ab){if(this._rulesEngineData==null){this._rulesEngineData={}}if(typeof this._rulesEngineData[aa]=="undefined"){this._rulesEngineData[aa]={}}k.forEach(ab,h.hitch(this,"processRule",aa))},processRule:function O(ab,ac,aa){if(ac.targetId!=null){if(typeof this._rulesEngineData[ab][ac.targetId]=="undefined"){this._rulesEngineData[ab][ac.targetId]={}}this._rulesEngineData[ab][ac.targetId].rules=ac;this.alfSubscribe("_valueChangeOf_"+ac.targetId,h.hitch(this,"evaluateRules",ab))}else{this.alfLog("warn","The following rule is missing a 'name' attribute",ac,this)}},evaluateRules:function I(aa,ae){this.alfLog("log","RULES EVALUATION('"+aa+"'): Field '"+this.fieldId+"'");this._rulesEngineData[aa][ae.fieldId].currentValue=ae.value;var ac=true;var af=false;for(var ai in this._rulesEngineData[aa]){af=true;if(ac){var ah=this._rulesEngineData[aa][ai].currentValue;var ab=this._rulesEngineData[aa][ai].rules.is;var aj=this._rulesEngineData[aa][ai].rules.isNot;var ag=(typeof ab=="undefined"||ab.length==0);var ad=(typeof aj!="undefined"&&aj.length>0);if(ad){ad=k.some(aj,h.hitch(this,"ruleValueComparator",ah))}if(!ad&&typeof ab!="undefined"&&ab.length>0){ag=k.some(ab,h.hitch(this,"ruleValueComparator",ah))}ac=ac&&ag&&!ad}}ac=ac&&af;this[aa](ac);return ac},ruleValueComparator:function t(aa,ab){this.alfLog("log","Comparing",aa,ab);if(aa!=null&&ab.value!=null){return aa.toString()==ab.value.toString()}else{return aa==ab}},_processCallbacksConfig:function S(ac,ab){var ad=this;for(var aa in ab){if(typeof ab[aa]=="function"){ad.alfSubscribe("_valueChangeOf_"+aa,function(af){var ae=ab[af.name](af.name,af.oldValue,af.value,ad,ac);ad[ac](ae)})}else{if(typeof ab[aa]=="string"&&typeof ad[ab[aa]]=="function"){ad.alfSubscribe(ad.pubSubScope+"_valueChangeOf_"+aa,function(af){var ae=ad[ab[af.name]](af.name,af.oldValue,af.value,ad,ac);ad[ac](ae)})}else{this.alfLog("log","The callback for property '"+ad.name+"' for handling changes to property '"+aa+"' was not a function or was not a String that references a local function")}}}},postCreate:function N(){var aa=this;this.initialConfig=this.getWidgetConfig();if(typeof this.initialConfig.disabled=="undefined"){this.initialConfig.disabled=this._disabled}this.wrappedWidget=this.createFormControl(this.initialConfig);if(this.isPromisedWidget&&typeof this.wrappedWidget.then==="function"){this.wrappedWidget.then(h.hitch(this,"onPromisedWidget"))}else{this.completeWidgetSetup()}},isPromisedWidget:false,onPromisedWidget:function p(aa){this.wrappedWidget=aa;this.completeWidgetSetup()},placeWidget:function o(){if(this.wrappedWidget!=null&&typeof this.wrappedWidget.placeAt==="function"){this.wrappedWidget.placeAt(this._controlNode)}else{this.alfLog("error","The wrapped widget has no 'placeAt' function - perhaps the 'placeWidget' function should be overridden?",this)}},completeWidgetSetup:function U(){this.placeWidget();this.setupChangeEvents();this.alfVisible(this._visible);this.alfRequired(this._required);this.alfDisabled(this._disabled);if(this.label!=null&&this.label.trim()!=""){this._labelNode.innerHTML=this.encodeHTML(this.message(this.label))}else{V.set(this._labelNode,{display:"none"})}if(this.description!=null&&this.description.trim()!=""){this._descriptionNode.innerHTML=this.encodeHTML(this.message(this.description))}else{V.set(this._descriptionNode,{display:"none"})}if(this.unitsLabel!=null&&this.unitsLabel!=""){this._unitsNode.innerHTML=this.encodeHTML(this.message(this.unitsLabel))}else{V.set(this._unitsNode,{display:"none"})}if(this.validationConfig!=null&&typeof this.validationConfig.errorMessage=="string"){this._validationMessage.innerHTML=this.encodeHTML(this.message(this.validationConfig.errorMessage))}},setupChangeEvents:function U(){if(this.wrappedWidget){var aa=this.wrappedWidget.watch("value",h.hitch(this,"onValueChangeEvent"))}},onValueChangeEvent:function b(ab,aa,ac){this.formControlValueChange(ab,aa,ac);this.validate()},getValue:function l(){var aa=null;if(this.wrappedWidget){try{aa=this.wrappedWidget.getValue()}catch(ab){this.alfLog("log","An exception was thrown retrieving the value for field: '"+this.fieldId+"'")}}return aa},setValue:function e(aa){this.alfLog("log","Setting field: '"+this.fieldId+"' with value: ",aa);if(this.wrappedWidget){this.wrappedWidget.setValue(aa)}},publishValue:function F(){this.alfLog("log","Publishing value for field: '"+this.fieldId+"'");if(this.wrappedWidget){this.alfPublish("_valueChangeOf_"+this.fieldId,{fieldId:this.fieldId,name:this.name,oldValue:this.getValue(),value:this.getValue()})}},formControlValueChange:function d(ab,aa,ac){this.alfPublish("_valueChangeOf_"+this.fieldId,{fieldId:this.fieldId,name:this.name,oldValue:aa,value:ac})},createFormControl:function K(aa){},getWidgetConfig:function M(){return{}},startup:function a(){},validationConfig:null,validate:function P(){var aa=this.processValidationRules();if(aa){this.alfPublish("ALF_VALID_CONTROL",{name:this.name,fieldId:this.fieldId});this.hideValidationFailure()}else{this.alfPublish("ALF_INVALID_CONTROL",{name:this.name,fieldId:this.fieldId});this.showValidationFailure()}return aa},processValidationRules:function c(){var aa=true;if(this._visible&&!this._disabled){var ac=this.getValue();this.alfLog("log","Validating: '"+this.fieldId+"' with value:",ac);var ab=true,ad=true;ab=!(this._required&&(ac==null||ac==""));if(this.validationConfig!=null){if(typeof this.validationConfig.regExObj!="undefined"&&this.validationConfig.regExObj instanceof RegExp){ad=this.validationConfig.regExObj.test(ac)}}aa=ab&&ad}else{}return aa},showValidationFailure:function Y(){x.add(this._validationIndicator,"validation-error");x.add(this._validationMessage,"display")},hideValidationFailure:function J(){x.remove(this._validationIndicator,"validation-error");x.remove(this._validationMessage,"display")}})});