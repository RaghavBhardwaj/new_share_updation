define(["dojo/_base/declare","dijit/_WidgetBase","dijit/_TemplatedMixin","dojo/text!./templates/DropZone.html","alfresco/core/Core","dojo/_base/lang","dojo/_base/array","dijit/registry","dojo/dnd/Source","dojo/dnd/Target","dojo/dom-construct","dojo/dom-class","dojo/aspect","alfresco/creation/DropZoneWrapper","dojo/on"],function(v,n,i,x,o,y,g,h,p,u,f,j,q,d,l){return v([n,i,o],{cssRequirements:[{cssFile:"./css/DropZone.css"}],templateString:x,horizontal:false,previewTarget:null,initialItems:null,acceptTypes:null,postCreate:function b(){if(this.acceptTypes==null){this.acceptTypes=["widget"]}this.previewTarget=new p(this.previewNode,{accept:this.acceptTypes,creator:y.hitch(this,"creator"),withHandles:true,horizontal:this.horizontal});this.childPubSubScope=this.generateUuid();q.after(this.previewTarget,"onMouseDown",y.hitch(this,"onWidgetSelected"),true);q.after(this.previewTarget,"onDrop",y.hitch(this,"refreshChildren"),true);q.after(this.previewTarget,"insertNodes",y.hitch(this,"publishAvailableFields"),true);this.alfSubscribe("ALF_UPDATE_RENDERED_WIDGET",y.hitch(this,"updateItem"));this.alfSubscribe(this.childPubSubScope+"ALF_REQUEST_AVAILABLE_FORM_FIELDS",y.hitch(this,"publishAvailableFields"),true);l(this.previewNode,"onWidgetDelete",y.hitch(this,"deleteItem"));if(this.initialItems!=null){this.previewTarget.insertNodes(false,this.initialItems,false,null)}if(this.value!=null&&this.value!=""){g.forEach(this.value,function(B,z){var A={name:B.name,module:B.module,defaultConfig:B.defaultConfig,widgetsForDisplay:B.widgetsForDisplay,widgetsForConfig:B.widgetsForConfig};var C=this.creator(A);this.previewTarget.insertNodes(true,[C.data])},this)}},getAvailableFields:function t(){var C=[];for(var A in this.previewTarget.map){var B=this.previewTarget.map[A];var D=y.getObject("updatedConfig.defaultConfig.name",false,B.data);if(D==null){D=y.getObject("defaultConfig.name",false,B.data)}var z=y.getObject("updatedConfig.defaultConfig.fieldId",false,B.data);if(z==null){z=y.getObject("defaultConfig.fieldId",false,B.data)}C.push({label:D,value:z})}return C},publishAvailableFields:function e(){var z={};z.options=this.getAvailableFields();this.alfLog("log","Publishing available fields:",z,this);this.alfPublish(this.childPubSubScope+"ALF_FORM_FIELDS_UPDATE",z,true)},deleteItem:function r(z){this.alfLog("log","Delete widget request detected",z);if(z.target!=null&&z.target.id!=null&&this.previewTarget.getItem(z.target.id)!=null&&z.widgetToDelete!=null){var B=this.previewTarget.getItem(z.target.id);var A=y.getObject("data.defaultConfig.fieldId",false,B),C=y.getObject("data.parentId",false,B);if(A!=null&&C!=null){this.removeReferencesFromParent(C,A);this.alfSetData(A,null)}z.widgetToDelete.destroyRecursive(false);this.previewTarget.delItem(z.target.id);if(this.previewTarget.getAllNodes().length==0){j.remove(this.previewNode,"containsItems")}this.alfPublish("ALF_CLEAR_CONFIGURE_WIDGET",{});this.refreshChildren();this.publishAvailableFields()}},updateItem:function c(G){if(G.node!=null){var D=g.some(this.previewTarget.getAllNodes(),function(K,J){return G.node.id==K.id});if(D==true){this.alfLog("log","Updating item",G);var E=G.originalConfig.defaultConfig.fieldId;var z=this.alfGetData(E);if(z!=null){var C=(z.itemNameKey!=null)?z.itemNameKey:"name",A=(z.itemConfigKey!=null)?z.itemConfigKey:"config";z.widgetConfig={};z.widgetConfig[C]=z.module;z.widgetConfig[A]={};z.updatedConfig={defaultConfig:{},additionalConfig:{}};for(var H in G.updatedConfig.defaultConfig){var I=G.updatedConfig.defaultConfig[H];z.widgetConfig[A][H]=I;y.setObject(H,I,z.updatedConfig.defaultConfig)}for(var H in G.updatedConfig.additionalConfig){var I=G.updatedConfig.additionalConfig[H];z.widgetConfig[H]=I;y.setObject(H,I,z.updatedConfig.additionalConfig)}for(var B=0;B<z.widgetsForConfig.length;B++){z.widgetsForConfig[B].config.value=y.getObject(z.widgetsForConfig[B].config.name,false,G.updatedConfig)}}g.forEach(this.previewTarget.getSelectedNodes(),function(K,J){var L=h.byNode(K);if(L){L.destroyRecursive(true)}},this);try{this.previewTarget.insertNodes(false,[z],true,G.node)}catch(F){this.alfLog("log","Error",F)}finally{this.alfLog("log","Finally")}this.previewTarget.deleteSelectedNodes();this.refreshChildren();this.publishAvailableFields()}}},removeReferencesFromParent:function m(B,z){if(B!=null){var A=this.alfGetData(B);if(A!=null){A.children=g.filter(A.children,function(D,C){return D!=z},this)}else{this.alfLog("warn","Expected to find parentId in the data model",B,this)}}},creator:function s(N,F){this.alfLog("log","Creating",N,F);var B=f.create("div");if(N.module!=null&&N.module!=""){var I=y.clone(N);var A=(I.defaultConfig!=null)?I.defaultConfig:{};if(A.fieldId===undefined){A.fieldId=this.generateUuid()}var K=null;var z=this.alfGetData(A.fieldId);if(z!=null){K=z.widgetsForDisplay}else{var H=(I.itemNameKey!=null)?I.itemNameKey:"name",E=(I.itemConfigKey!=null)?I.itemConfigKey:"config";I.widgetConfig={};I.widgetConfig[H]=I.module;I.widgetConfig[E]={};for(var M in I.defaultConfig){var L=I.defaultConfig[M];I.widgetConfig[E][M]=L}if(I.previewWidget==true||I.widgetsForDisplay==null||I.widgetsForDisplay.length==0){K=[{name:I.module,config:A}]}else{K=I.widgetsForDisplay}}if(this.widgetsForNestedConfig!=null){if(I.originalConfigWidgets===undefined){I.originalConfigWidgets=y.clone(I.widgetsForConfig)}var J=y.clone(this.widgetsForNestedConfig);if(z!=null&&z.updatedConfig!=null){g.forEach(I.originalConfigWidgets,function(Q,P){var O=y.getObject(Q.config.name,false,z.updatedConfig);if(O!=null){Q.config.value=O}},this);g.forEach(J,function(Q,P){var O=y.getObject(Q.config.name,false,z.updatedConfig.additionalConfig);if(O!=null){Q.config.value=O}},this)}else{I.widgetsForConfig=I.originalConfigWidgets.concat(J);g.forEach(I.widgetsForConfig,function(Q,P){var O=y.getObject(Q.config.name,false,I);if(O!=null){Q.config.value=O}},this)}}g.forEach(I.widgetsForConfig,function(P,O){y.setObject("config.pubSubScope",this.childPubSubScope,P)},this);var C=this.getMyUuid();this.removeReferencesFromParent(I.parentId,A.fieldId);I.parentId=C;var G=this.alfGetData(C);if(G==null){this.alfLog("warn","No entry in the data model for DropZone!",this)}else{if(G.children==null){G.children=[]}G.children.push(A.fieldId)}this.alfSetData(A.fieldId,I);var D=new d({fieldId:A.fieldId,parentPubSubScope:this.childPubSubScope,pubSubScope:this.pubSubScope,widgets:K,moduleName:I.name},B)}else{this.alfLog("log","The requested item to create was missing a 'module' attribute",N,this)}j.add(this.previewNode,"containsItems");return{node:D.domNode,data:I,type:["widget"]}},getMyUuid:function w(){var z=y.getObject("_dropZoneWrapperId",false,this);if(z==null){z=this.id}return z},onWidgetSelected:function a(B){var C=this.previewTarget.getSelectedNodes();if(C.length>0&&C[0]!=null){var z=this.previewTarget.getItem(C[0].id);this.alfLog("log","Widget selected",z);var A={pubSubScope:this.childPubSubScope,selectedNode:C[0],selectedItem:z.data};this.alfPublish("ALF_CONFIGURE_WIDGET",A)}},refreshChildren:function k(){this.alfLog("log","Widgets updated");var B=this.getMyUuid();var A=this.alfGetData(B);var z=[];g.forEach(A.children,function(D,C){var D=this.alfGetData(D);z.push(D)},this);A.widgetsForDisplay=[{name:"alfresco/creation/DropZone",config:{horizontal:this.horizontal,widgetsForNestedConfig:this.widgetsForNestedConfig,initialItems:z}}];l.emit(this.domNode,"onWidgetUpdate",{bubbles:true,cancelable:true})}})});