define(["dojo/_base/declare","dijit/_WidgetBase","alfresco/core/Core","alfresco/core/CoreXhr","dojo/_base/lang","dojo/_base/array","dojo/on","alfresco/dialogs/AlfDialog","alfresco/buttons/AlfButton","service/constants/Default"],function(x,d,n,h,D,i,j,g,o,k){return x([d,n,h],{i18nRequirements:[{i18nFile:"./i18n/AlfUpload.properties"}],_ALF_UPLOAD_TOPIC:"ALF_UPLOAD_REQUEST",STATE_BROWSING:1,STATE_ADDED:2,STATE_UPLOADING:3,STATE_FINISHED:4,STATE_FAILURE:5,STATE_SUCCESS:6,fileStore:null,aggregateUploadTargetSize:0,aggregateUploadCurrentSize:0,reset:function v(){this.fileStore={};this.aggregateUploadTargetSize=0;this.aggregateUploadCurrentSize=0},constructor:function q(E){D.mixin(this,E);this.reset();this.alfSubscribe(this._ALF_UPLOAD_TOPIC,D.hitch(this,"onUploadRequest"))},onUploadRequest:function r(E){this.alfLog("log","Upload request received: ",E);if(D.exists("files",E)&&D.exists("targetData",E)){this.currentResponseTopic=E.alfResponseTopic;this.filesToUpload=[];this.validateRequestedFiles(E.files);this.startFileUploads(E.targetData)}else{this.alfLog("warn","A request was received to upload files but either no 'files' attribute or no 'targetData' attribute was defined",E,this)}},validateRequestedFiles:function C(E){i.forEach(E,D.hitch(this,"validateRequestedFile"))},validateRequestedFile:function t(F,E){if(F.size==0){this.addInvalidFile(F)}else{this.addFileForUpload(F)}},addInvalidFile:function c(E){this.alfLog("log","Adding invalid file: ",E,this);if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.addFailedFile==="function"){this.uploadDisplayWidget.addFailedFile(E.name,{reason:"0kb files cannot be uploaded"})}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'addFailedFile' function",this)}},addFileForUpload:function b(E){this.alfLog("log","Adding file for upload",E,this);if(this.filesToUpload==null){this.filesToUpload=[]}this.filesToUpload.push(E)},startFileUploads:function s(F){var E=0;i.forEach(this.filesToUpload,function(H,G){E+=H.size},this);this.aggregateUploadTargetSize=E;i.forEach(this.filesToUpload,function(I,H){var G="file"+H;var M=I.name;var J=new XMLHttpRequest();J.upload._fileData=G;j(J.upload,"progress",D.hitch(this,"uploadProgressListener",G));j(J.upload,"load",D.hitch(this,"successListener",G));j(J.upload,"error",D.hitch(this,"failureListener",G));data={id:G,name:M,size:I.size};var K=null;var L=this.constructUploadData(I,M,F);this.fileStore[G]={state:this.STATE_ADDED,fileName:M,nodeRef:K,uploadData:L,request:J,lastProgress:0};if(this.uploadDisplayWidget==null){this.alfLog("warn","No widget has been defined to handle the file upload display - 'uploadDisplayWidget' is null",this)}else{if(typeof this.uploadDisplayWidget.addInProgressFile!=="function"){this.alfLog("warn","The 'uploadDisplayWidget' does not have an 'addInProgressFile' function",this.uploadDisplayWidget)}else{this.uploadDisplayWidget.addInProgressFile(G,I)}}},this);this.spawnFileUploads();this.progressDialog.show()},constructUploadData:function a(E,H,G){var F={filedata:E,filename:H,destination:G.destination,siteId:G.siteId,containerId:G.containerId,uploaddirectory:G.uploadDirectory,majorVersion:true,updateNodeRef:G.updateNodeRef,description:G.description,overwrite:G.overwrite,thumbnails:G.thumbnails,username:G.username};return F},spawnFileUploads:function f(){for(var F in this.fileStore){var E=this.fileStore[F];if(E.state==this.STATE_ADDED){this.startFileUpload(E);return}}},startFileUpload:function b(F){F.state=this.STATE_UPLOADING;var E;if(this.uploadURL==null){E=k.PROXY_URI+"api/upload"}else{E=k.PROXY_URI+this.uploadURL}if(this.isCsrfFilterEnabled()){E+="?"+this.getCsrfParameter()+"="+encodeURIComponent(this.getCsrfToken())}if(this.uploadMethod===this.FORMDATA_UPLOAD){var G=new FormData;G.append("filedata",F.uploadData.filedata);G.append("filename",F.uploadData.filename);G.append("destination",F.uploadData.destination);G.append("siteId",F.uploadData.siteId);G.append("containerId",F.uploadData.containerId);G.append("uploaddirectory",F.uploadData.uploaddirectory);G.append("majorVersion",F.uploadData.majorVersion?"true":"false");G.append("username",F.uploadData.username);G.append("overwrite",F.uploadData.overwrite);G.append("thumbnails",F.uploadData.thumbnails);if(F.uploadData.updateNodeRef){G.append("updateNodeRef",F.uploadData.updateNodeRef)}if(F.uploadData.description){G.append("description",F.uploadData.description)}F.request.open("POST",E,true);F.request.send(G)}},uploadProgressListener:function p(G,F){this.alfLog("log","File upload progress update received",F);if(F.lengthComputable){try{var E=Math.round((F.loaded*100)/F.total),I=this.fileStore[G];this.alfLog("log","File: "+G+", uploaded: "+E+"%");if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.updateUploadProgress==="function"){this.uploadDisplayWidget.updateUploadProgress(G,E,F)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'updateUploadProgress' function",this)}this.updateAggregateProgress(I);I.lastProgress=F.loaded}catch(H){this.alfLog("error","The following error occurred processing an upload progress event: ",H,F)}}else{this.alfLog("log","File upload progress not computable",F,this)}},updateAggregateProgress:function m(F){if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.updateAggregateProgress==="function"){this.aggregateUploadCurrentSize-=F.lastProgress;this.aggregateUploadCurrentSize+=F.uploadData.filedata.size;var E=(this.aggregateUploadCurrentSize/this.aggregateUploadTargetSize);this.uploadDisplayWidget.updateAggregateProgress(E)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'updateAggregateProgress' function",this)}},successListener:function z(F,E){try{this.alfLog("log","File upload completion notification received",E);var H=this.fileStore[F];if(H.request.readyState!=4){var J=this;H.request.onreadystatechange=function I(){if(H.request.readyState==4){J.processUploadCompletion(F,E)}}}else{this.processUploadCompletion(F,E)}}catch(G){this.alfLog("error","The following error occurred processing an upload completion event: ",G,E)}},processUploadCompletion:function y(F,E){var H=this.fileStore[F];if(H.request.status=="200"){var G=Alfresco.util.parseJSON(H.request.responseText);H.nodeRef=G.nodeRef;H.fileName=G.fileName;H.state=this.STATE_SUCCESS;if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.handleCompletedUpload==="function"){this.uploadDisplayWidget.handleCompletedUpload(F,E,H.request)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'handleCompletedUpload' function",this)}this.updateAggregateProgress(H);this.spawnFileUploads()}else{this.processUploadFailure(F,E,H.request)}},failureListener:function B(F,E){try{var H=this.fileStore[F];if(H.state!==this.STATE_FAILURE){this.processUploadFailure(F,E)}}catch(G){this.alfLog("error","The following error occurred processing an upload failure event: ",G,E)}},processUploadFailure:function w(F,E){var G=this.fileStore[F];G.state=this.STATE_FAILURE;if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.handleFailedUpload==="function"){this.uploadDisplayWidget.handleFailedUpload(F,E,G.request)}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'handleFailedUpload' function",this)}this.updateAggregateProgress(G);this.spawnFileUploads()},progressDialog:null,progressDialogTitleKey:"progress-dialog.title",createProgressDialogTitle:function l(){return this.message(this.progressDialogTitleKey)},widgetsForProgressDialog:[{name:"alfresco/upload/AlfUploadDisplay",assignTo:"uploadDisplayWidget",config:{}}],postCreate:function e(){if(this.progressDialog==null){var E="ALF_UPLOAD_DIALOG_OK_CLICK",F="ALF_UPLOAD_DIALOG_CANCEL_CLICK";this.alfSubscribe(E,D.hitch(this,"onProgressDialogOkClick"));this.alfSubscribe(F,D.hitch(this,"onProgressDialogCancelClick"));this.progressDialog=new g({title:this.createProgressDialogTitle(),widgetsContent:this.widgetsForProgressDialog,widgetsButtons:[{name:"alfresco/buttons/AlfButton",config:{label:this.message("progress-dialog.ok-button.label"),publishTopic:E}},{name:"alfresco/buttons/AlfButton",config:{label:this.message("progress-dialog.cancel-button.label"),publishTopic:F}}]});this.getUploadDisplayWidget()}},getUploadDisplayWidget:function r(){if(this.progressDialog!=null&&this.progressDialog.uploadDisplayWidget!=null){this.uploadDisplayWidget=this.progressDialog.uploadDisplayWidget}},onProgressDialogOkClick:function A(E){this.alfLog("log","Upload progress dialog 'ok' button clicked");this.reset();if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.reset==="function"){this.uploadDisplayWidget.reset()}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'reset' function",this)}if(this.currentResponseTopic!=null){this.alfPublish(this.currentResponseTopic,{},true)}},onProgressDialogCancelClick:function u(E){this.alfLog("log","Upload progress dialog 'cancel' button clicked");this.reset();if(this.uploadDisplayWidget!=null&&typeof this.uploadDisplayWidget.reset==="function"){this.uploadDisplayWidget.reset()}else{this.alfLog("warn","Either the 'uploadDisplayWidget' is null or it has no 'reset' function",this)}if(this.currentResponseTopic!=null){this.alfPublish(this.currentResponseTopic,{},true)}}})});