define(["dojo/_base/declare","dijit/_WidgetBase","dijit/_TemplatedMixin","dojo/text!./templates/HeaderCell.html","alfresco/core/Core","dojo/_base/lang","dojo/dom-class","dojo/query","alfresco/misc/AlfTooltip"],function(g,h,q,p,d,c,k,i,l){return g([h,q,d],{cssRequirements:[{cssFile:"./css/HeaderCell.css"}],templateString:p,sortable:false,usedForSort:false,sortedAscending:false,sortValue:null,toolTipMsg:null,postMixinProperties:function a(){if(this.label!=null){this.label=this.message(this.label)}this.currentItem={}},postCreate:function f(){this.alfSubscribe("ALF_DOCLIST_SORT",c.hitch(this,"onExternalSortRequest"));this.alfSubscribe("ALF_DOCLIST_SORT_FIELD_SELECTION",c.hitch(this,"onExternalSortRequest"));if(this.sortable==false||this.usedForSort==false){this.sortIcon("nil")}else{this.sortIcon(this.sortedAscending==false?"desc":"asc")}if(this.toolTipMsg!=null){this.addToolTipMsg()}},focus:function j(){this.domNode.focus()},onSortClick:function o(r){if(this.sortable==true){this.alfLog("log","Sort request received");if(this.usedForSort==false){this.usedForSort=true;this.sortedAscending=true;this.sortIcon("asc")}else{if(this.sortedAscending==true){this.sortIcon("desc");this.sortedAscending=false}else{this.sortIcon("asc");this.sortedAscending=true}}this.publishSortRequest()}},publishSortRequest:function b(){this.alfPublish("ALF_DOCLIST_SORT",{direction:(this.sortedAscending)?"ascending":"descending",value:this.sortValue,requester:this})},onExternalSortRequest:function n(u){var r=c.getObject("requester",false,u);if(r!=this){var s=c.getObject("value",false,u);if(s!=null){if(s==this.sortValue){this.usedForSort=true;this.sortIcon(this.sortedAscending==true?"asc":"desc")}else{this.usedForSort=false;this.sortIcon("nil")}}var t=c.getObject("direction",false,u);if(t!=null){this.sortedAscending=(t=="ascending");if(this.usedForSort==true){this.sortIcon(this.sortedAscending==true?"asc":"desc")}}}},sortIcon:function e(r){var u="hidden",t=this.ascendingSortNode,s=this.descendingSortNode;switch(r){case"asc":k.remove(t,u);k.add(s,u);break;case"desc":k.add(t,u);k.remove(s,u);break;default:k.add(t,u);k.add(s,u);break}},addToolTipMsg:function m(){var r=i(".label",this.domNode);var s=new l({targetNode:r,label:this.message(this.toolTipMsg)});this.alfLog("log","Created HeaderCell tooltip with label '"+s.label+"' for item '"+this.domNode+"'",this)}})});